<!DOCTYPE HTML>
<html><head>
  
  <meta content="text/html; charset=ISO-8859-1" http-equiv="content-type">
  <title>Temporisation WakeUp DD</title>
<HTA:APPLICATION
  APPLICATIONNAME="WakeUp Dock"
  ID="WakeUpDockHTA"
  VERSION="4.2 du 10/03/2024 [Auteur : <JJ Delalandre>jjdelalandre@gmail.com]"
  SCROLL="no"
  CLOSE="no"
  RESIZE="no"
  CLOSEBUTTON="no"
  BORDER="thin"
  BORDERSTYLE="sunken"/>

<style type="text/css">

</style>

    <link rel="stylesheet" type="text/css" href="include/wakeUp.css">
    <script src="include/wakeUp.js"></script>
</head>

<script language="javaScript">
//================== JAVASCRIPT ================================

</script>


<script language="VBScript">
'================== Declaration public ================================
'*** Préparation de l'environnement
Option Explicit
const cstStatusFile = 0
const cstCreateFile = 1
const cstDeleteFile = 2

dim fnc
dim mobidic, dico
dim bolok, fileName, isRunning
dim beginTime, endTime, Duree 
dim fichierTXT

'Dim oShell: Set oShell = CreateObject("WScript.Shell")
dim fso:    Set fso = CreateObject("Scripting.FileSystemObject" )
dim tsLog

'================== EVENTS ============================================
'----------------------------------------------
'
'----------------------------------------------
sub Window_OnLoad
    window.resizeTo 800, 530
	document.title = document.title & ",  Version " &   WakeUpDockHTA.Version
    set fnc = load_class ("funotheque")
 
    'load_config
    set mobidic = fnc.load_iniFile("config.ini")
    set dico = fnc.load_iniFile("language\" & mobidic("language") & ".ini")

    update_interface_language
    call fill_ListLanguage(mobidic("language"))	
    'lstLanguage.value=mobidic("language")
    call fill_listDrives(mobidic("drive"))    
    
    update_buttons(0)
    
    frmTemporisation.value = mobidic("tempo")
    frmEssais.value = mobidic("essais")
    frmFileName.value  = mobidic("fileName")
    frmChkLog.checked  = (mobidic("saveLog") = 1)

    'call set_message(FormatDateTime(Now, vbGeneralDate), frmBeginDate) 
    'call set_message(FormatDateTime(Now, vbGeneralDate), frmEndDate) 
 
   
    
end sub
'----------------------------------------------
'
'----------------------------------------------
sub Window_onUnload()
    isRuning (2)
    set_log mobidic("msg_quit")
end sub
'----------------------------------------------
'
'----------------------------------------------
sub event_updateLanguage()

    mobidic("language") = lstLanguage.value
    set dico = fnc.load_iniFile("language\" & mobidic("language") & ".ini")
        
    update_interface_language () 

end sub
'----------------------------------------------
'
'----------------------------------------------
sub event_openURL (url) 
    oShell.run url
end sub
'----------------------------------------------
'
'----------------------------------------------
sub event_openHelp () 
    if mobidic("language") = "french" then
        event_openURL "https://github.com/JJDai54/WakeUp_Dock/blob/main/docs/help_fr.pdf"
    else
        event_openURL "https://github.com/JJDai54/WakeUp_Dock/blob/main/docs/help_en.pdf"
    end if
end sub


'----------------------------------------------
'
'----------------------------------------------
sub event_updateTempo()
dim newTempo
  
    on error resume next
    newtempo = cInt(trim (inputBox("Entrez la nouvelle temporisation", WakeUpDockHTA.ApplicationName, mobidic("tempo"))))
    if error.number = 0 then
      if newTempo <> frmTemporisation.value AND newTempo <> 0 AND IsNumeric(newTempo) then 
          frmTemporisation.value = newTempo
          mobidic("tempo") = frmTemporisation.value
       end if  
     end if
end sub
'----------------------------------------------
'
'----------------------------------------------
sub event_updateEssais()
dim newValue
  
    on error resume next
    newValue = cInt(trim (inputBox("Entrez le noveau nombre d'essais", WakeUpDockHTA.ApplicationName, mobidic("tempo"))))
    if error.number = 0 then
      if newValue <> frmEssais.value AND newValue <> 0 AND IsNumeric(newValue) then 
          frmEssais.value = newValue
          mobidic("essais") = frmEssais.value
       end if  
     end if
end sub

'----------------------------------------------
'
'----------------------------------------------
sub event_updateDrives()
    call fill_listDrives(mobidic("drive"))
end sub
'----------------------------------------------
'
'----------------------------------------------
sub event_runTemporisation()
    runTemporisation()
end sub
'----------------------------------------------
'
'----------------------------------------------
sub event_stopTemporisation( )
dim r
    set_log dico("msg_stopTempo")
    isRuning (2)
    bolok = false
    update_buttons(2)
     
end sub
'----------------------------------------------
'
'----------------------------------------------
sub event_saveConfig()
    call fnc.save_iniFile (mobidic, "config.ini", false, 12)
end sub

'----------------------------------------------
'
'----------------------------------------------
sub event_closeTemporisation()
    ''msgbox("On ferme")
	On Error Resume Next
	window.close()
	On Error Goto 0

end sub 
'----------------------------------------------
'
'----------------------------------------------
function load_class(className)
Dim classFile : classFile = "include\" & className & ".vbs"
Dim vbsFile : Set vbsFile = fsO.OpenTextFile(classFile, 1, False)
Dim myFunctionsStr : myFunctionsStr = vbsFile.ReadAll
dim cls

    vbsFile.Close
    Set vbsFile = Nothing

    ExecuteGlobal myFunctionsStr
    Set cls = (New Funotheque)()
'cls.toString()
    set load_class = cls
end function

'----------------------------------------------
'
'----------------------------------------------
function update_interface_language () 
  
    cmdRun.innerHTML = dico("msg_executeTempo")
    cmdStop.innerHTML = dico("msg_kilTempo")
    cmdSaveConfig.innerHTML = dico("msg_SaveConfig")
    cmdQuit.innerHTML = dico("msg_closeWindow")
    cmdUpdateDrives.innerHTML = dico("msg_refreshDrives") 
     
    msg_libLecteur.innerHTML = dico("msg_libLecteur")
    msg_libLanguage.innerHTML = dico("msg_libLanguage")
    msg_libTempo.innerHTML = dico("msg_libTempo")
    msg_libFile.innerHTML = dico("msg_libFile")
    msg_libBeginDate.innerHTML = dico("msg_libBeginDate")
    msg_libEndDate.innerHTML = dico("msg_libEndDate")
    msg_libDuree.innerHTML = dico("msg_libDuree")
    msg_libCounter.innerHTML = dico("msg_libCounter")
    msg_libLog.innerHTML = dico("msg_libLog")
    msg_libNbEssai.innerHTML = dico("msg_libNbEssai")
    msg_libChkLog.innerHTML = dico("msg_libChkLog")
    
    msg_LecteurToWakeUp.innerHTML = dico("msg_lecteurToWakeUp")
    msg_duree.innerHTML = dico("msg_duree")
    msg_fileName.innerHTML = dico("msg_fileName")
    msg_dateBegin.innerHTML = dico("msg_dateBegin")
    msg_dateEnd.innerHTML = dico("msg_dateEnd")
    msg_dureeOfProcess.innerHTML = dico("msg_dureeOfProcess")
    msg_nbWakeUp.innerHTML = dico("msg_nbWakeUp")
    msg_langInterface.innerHTML = dico("msg_langInterface")
    msg_Essais.innerHTML = dico("msg_Essais")
    msg_log.innerHTML = dico("msg_log")
    msg_chkLog.innerHTML = dico("msg_chkLog")

End function
'----------------------------------------------
'
'----------------------------------------------
function update_timer()
dim secondes, minutes, heures

    endTime = Now()
    call set_message(FormatDateTime(endTime, vbGeneralDate), frmEndDate)    
    duree = endTime - beginTime
    secondes = DateDiff("s", beginTime, endTime)
    minutes  = DateDiff("n", beginTime, endTime)
    heures   = DateDiff("h", beginTime, endTime)
    duree = secondes
    
    call set_message(heures & " heures " & minutes & " minutes " & secondes & " secondes", frmDuree)    
    
end function
'----------------------------------------------
'
'----------------------------------------------
function update_buttons(action)
dim bolok

    select case (action)
    case 1 : '*** execution
      cmdRun.disabled = true    
      cmdStop.disabled = false
      cmdQuit.disabled = true 
      cmdSaveConfig.disabled = true
      lstDrives.disabled=true
      frmFileName.disabled=true
      frmChkLog.disabled = true
      
    case 2: '*** stop
      cmdRun.disabled = true    
      cmdStop.disabled = true
      cmdQuit.disabled = true 
      cmdSaveConfig.disabled = true
      frmChkLog.disabled = true
      
    case else: '*** en attente
      cmdRun.disabled = false    
      cmdStop.disabled = true
      cmdQuit.disabled = false 
      lstDrives.disabled=false
      frmFileName.disabled=false
      cmdSaveConfig.disabled = false
      frmChkLog.disabled = false
    
    end select

    
    update_buttons   = true  
 ''   set_log dico("msg_stopTempo") & "(" & mobidic("tempo") & " secondes)" 
end function


'----------------------------------------------
'
'----------------------------------------------
function fill_listDrives(driveDefault)
dim drives
    
    drives = fnc.get_activeDrives()
    call jsLoadLecteurs(drives, driveDefault)
    fill_listDrives = drives

end function

'----------------------------------------------
'
'----------------------------------------------
function fill_ListLanguage(languageDefault)
dim languages

    languages = fnc.get_files("language", "ini", true)
    call jsLoadList("lstLanguage", languages, languageDefault)
    fill_ListLanguage = languages
end function


'================== Fonctions =========================================

'----------------------------------------------
'
'----------------------------------------------
function set_message(Message, objDiv)
      objDiv.innerHTML = Message
end function

'----------------------------------------------
'
'----------------------------------------------
function set_log(Message)
    call set_message(message, frmLog)
    if (mobidic("saveLog")) then
        tsLog.writeLine  FormatDateTime(now, vbGeneralDate) & "-" & Message
    end if
end function
'----------------------------------------------
'
'----------------------------------------------
sub beginLog () 
dim sBeginLog

    set tsLog = createFile("log\WakeUp_Dock.log")
    sBeginLog = "Drive : {drive} - Tempo : {tempo} - fichier : {fileName} - language : {language} - esssai : {essais}"
    sBeginLog = replace(sBeginLog, "{drive}", mobidic("drive"))
    sBeginLog = replace(sBeginLog, "{tempo}", mobidic("tempo"))
    sBeginLog = replace(sBeginLog, "{fileName}", mobidic("fileName"))
    sBeginLog = replace(sBeginLog, "{language}", mobidic("language"))
    sBeginLog = replace(sBeginLog, "{essais}", mobidic("essais"))
    set_log string(80,"-")
    set_log sBeginLog
    set_log string(80,"-")
end sub

'----------------------------------------------
'
'----------------------------------------------
sub initTemporisation( )


    set_log dico("msg_initTempo")
    mobidic("tempo") = frmTemporisation.value
    mobidic("essais") = frmEssais.value
    mobidic("fileName") = frmFileName.value
    mobidic("drive") = lstDrives.value
    bolok = true
    update_buttons(0)
    beginTime = Now()
    Duree = 0

    call set_message(FormatDateTime(Now, vbGeneralDate), frmBeginDate) 
    call set_message(FormatDateTime(Now, vbGeneralDate), frmEndDate) 
    
end sub

'----------------------------------------------
'
'----------------------------------------------
sub runTemporisation( )
dim newFile
dim h , nbEssai
    
    if (mobidic("saveLog")) then beginLog()

    initTemporisation()
    
    fichierTXT=""
    update_buttons(1)
'''if  mobidic("drive")="" then mobidic("drive")="N"
     ' creation du fichier isRuning      
    if not isRuning(cstCreateFile) then
        update_buttons(0)
        exit sub
    end if
    
    set_log dico("msg_runTempo")

    h = 0
    do while  bolok
        
        update_timer()
        on error resume next
        if fso.fileExists(fichierTXT) AND fichierTXT <> "" then
            set_log dico("msg_deleteFile") & fichierTXT
            fso.deleteFile(fichierTXT)
        end if
        on error goto 0
        
        h = h + 1
        call set_message(h, frmCounter)
        'fichierTXT =  mobidic("drive")  & ":\" & replace(mobidic("fileName"),"[counter]",h) 
        fichierTXT =  mobidic("drive")  & ":\" & mobidic("fileName") & "_" & h & ".txt" 

        '*** Création du fichier de temporisation
        on error resume next
        set_log dico("msg_createFile") & fichierTXT
        '---------------------------------------------
        Set newFile = createFile(fichierTXT)
        if newFile is nothing then
            set_log dico("Operation annulée")
            update_buttons(0)
            exit sub
        end if


          '*** Ecriture des données dans le fichier texte.
          newFile.WriteLine(dico("msg_data1"))

          newFile.Close


        sleep mobidic("tempo")

        if not isRuning(0) then
            set_log dico("msg_stopProcess")
            bolOk=false
        end if
        
    loop
    '--- FIN DE LA BOUCLE --------------------------------------
    if fso.fileExists(fichierTXT) then
        set_log dico("msg_deleteFile") & fichierTXT
        fso.deleteFile(fichierTXT)
    end if
    isRunning cstDeleteFile 
    
    update_timer()
    update_buttons(0)
    set_log dico("msg_endTempo")
    if (mobidic("saveLog")) then tsLog.close
end sub

'----------------------------------------------
'
'----------------------------------------------
function createFile(sFile)
dim h, newFile, bolOk, msg
    
    h = 0
    on error resume next
    
    do while true
        h = h + 1
        msg = replace(dico("msg_testReadDrive"), "{drive}", sFile)
        msg = replace(msg, "{tentatives}", h)
        msg = replace(msg, "{essais}", mobidic("essais"))
        set_log msg
        
        err.clear
        Set newFile = fso.CreateTextFile(sFile, TRUE)
        
        if err.number = 0 then 
            exit do       
        else
            
'msgbox h & "/" & mobidic("essais")  & "=" & err.number & " - ici - " & mobidic("drive") & "-" & fichierTXT
            if h > cInt(mobidic("essais")) then
                msgbox dico("msg_errCreateFile") & " " &  mobidic("drive")
                set createFile = nothing
                exit function
            end if
            sleep 5
        end if
        
    loop
    
    on error goto 0
    set createFile = newFile
    
end function
'----------------------------------------------
'
'----------------------------------------------
function isRuning(action)
dim r , sFile, tsIsRunning
    
    sFile = lstDrives.value & ":\$_isRuning.txt" 

    select case(action)
    case cstCreateFile: '*** creation du fichier
        set tsIsRunning = createFile(sFile)
        if tsIsRunning is nothing then
            r = false
        else
            tsIsRunning.WriteLine("is running")
            tsIsRunning.close
            r = true
        end if
        
    case cstDeleteFile: '*** suppression du fichier
        set_log dico("msg_deleteFile") & sFile
        if fso.fileExists(sFile) then
            fso.deleteFile sFile
            set_log dico("msg_deleteFile") & sFile
        end if
        r = false
        
    case else: 'cstStatusFile *** etat du fichier
        r = fso.fileExists(sFile)
    end select
    
    isRuning = r
end function

'----------------------------------------------
'
'----------------------------------------------
sub sleep (nbSecondes) 
dim sFilePath 

  sFilePath =  "include\sleep.vbs"
  oShell.Run sFilePath & " " & nbSecondes, 1, True

end sub


'==============================================================

</script>

<body>
  <div style="width: 800px;">
    <table>
      <tbody>
        <tr>
          <td class="tdCaption" id="msg_libLanguage">Lecteur</td>
          <td class="tdValue">
            <select name="lstLanguage" id="lstLanguage" onChange="event_updateLanguage()">
            </select></td>
          <td class="tdDescription" id="msg_langInterface">Langue</td>
        </tr>
        <tr>
          <td class="tdCaption" id="msg_libLecteur">Lecteur</td>
          <td class="tdValue">
                <select name="lstDrives" id="lstDrives"></select>
                &nbsp;&nbsp;&nbsp;
                <button class="btnActionRefresh" type="button" name="cmdUpdateDrives" value="cmdUpdateDrives" onclick="event_updateDrives()">...</button>
            </td>
          <td class="tdDescription" id="msg_LecteurToWakeUp">Lettre du lecteur à réveiller</td>
        </tr>
       <tr>
          <td class="tdCaption" id="msg_libTempo">Temporisation</td>
          <td class="tdValue">
            <input maxlength="5" size="5" name="frmTemporisation"  id="frmTemporisation" class="parameters" value="60" readonly style="color:black;">
            &nbsp;&nbsp;&nbsp;
            <button class="btnActionInp" type="button" name="cmdUpdateTempo" value="cmdUpdateTempo" onclick="event_updateTempo()">...</button>
          </td>
          <td sclass="tdDescription" id="msg_duree">Durée en secondes de la termporisation</td>
        </tr>
       <tr>
          <td class="tdCaption" id="msg_libNbEssai">Nombre d'essai</td>
          <td class="tdValue">
            <input maxlength="5" size="5" name="frmEssais"  id="frmEssais" class="parameters" value="60" readonly style="color:black;">
            &nbsp;&nbsp;&nbsp;
            <button class="btnActionInp" type="button" name="cmdUpdateTempo" value="cmdUpdateEssais" onclick="event_updateEssais()">...</button>
          </td>
          <td sclass="tdDescription" id="msg_Essais">Nb essais</td>
        </tr>
        <tr>
          <td class="tdCaption" id="msg_libFile">Fichier</td>
          <td class="tdValue"><input maxlength="30" size="30" name="frmFileName" class="parameters" value="$_wakeUp_[counter].txt"></td>
          <td class="tdDescription" id="msg_fileName">Nom du fichier à créer temporairement pour réveiller le Dock</td>
        </tr>
        <tr>
          <td class="tdCaption" id="msg_libChkLog"></td>
          <td class="tdValue">
            <div>
                <input type="checkbox" name="frmChkLog" id="frmChkLog" checked />
                <label name="msg_chkLog" id="msg_chkLog" for="frmChkLog">Générer un log</label>
            </div>
          </td>
          <td class="tdDescription" id="msg_log">Généraion d'un log</td>
        </tr>
        <tr>
          <td class="" colspan="3"><hr></td>
        </tr>
        <tr>
          <td class="tdCaption" id="msg_libBeginDate">Date début</td>
          <td class="tdValue"><div name="frmBeginDate" id="frmBeginDate"  class="tdCompute" style="width:150px;"></div></td>
          <td class="tdDescription" id="msg_dateBegin">Date heure de déébut de temporisation</td>
        </tr>
        <tr>
          <td class="tdCaption" id="msg_libEndDate">Date courante</td>
          <td class="tdValue"><div name="frmEndDate" id="frmEndDate"  class="tdCompute" style="width:150px;"></div></td>
          <td class="tdDescription" id="msg_dateEnd">Date heure de la denire temporisation</td>
        </tr>
        <tr>
          <td class="tdCaption" id="msg_libDuree">Duree</td>
          <td class="tdValue"><div name="frmDuree" id="frmDuree"  class="tdCompute" style="width:250px;"></div></td>
          <td class="tdDescription" id="msg_dureeOfProcess">Duree depuis le lancement de la temporisation</td>
        </tr>
        <tr>
          <td class="tdCaption" id="msg_libCounter">Compteur</td>
          <td class="tdValue"><div name="frmCounter" id="frmCounter" class="tdCompute" style="width:50px;">0</div></td>
          <td class="tdDescription" id="msg_nbWakeUp">Nombre d'écriture depuis le début de la temporisation</td>
        </tr>
        <tr>
          <td class="tdCaption" id="msg_libLog">Log</td>
          <td  class="tdInfo" colspan="2"><div name="frmLog" id="frmLog"></div></td>
        </tr>
        <tr><td colspan="3"><hr></td></tr>
        <tr>
          <td class="tdCaption" id="msg_libDon"></td>
          <td><center><img src="images/PayPal-donate-01.png" height="32px" alt="" title="" onclick="event_openURL('https://www.paypal.com/donate?hosted_button_id=H9EMH5M4XA48A')"></center></td>
          <td><img src="images/github-02.png" height="32px" alt="" title="" onclick="event_openURL('https://github.com/JJDai54/WakeUp_Dock')">
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <img src="images/help-01.png" height="32px" alt="" title="" onclick="event_openHelp()"></td>
        </tr>
      </tbody>
    <tr><hr><td colspan="3">
    <br>
    <div style="margin:0px 0px 12px 0px;width:90%;height:44px;padding:0px;text-align:center;">
      <button class="btnAction" type="button" name="cmdRun"  value="cmdRun" onclick="event_runTemporisation()">Lancer la temporisation</button>
      <button class="btnAction" type="button" name="cmdStop" value="cmdStop" onclick="event_stopTemporisation()">Stoper la temporisation</button>
      <button class="btnAction" type="button" name="cmdSaveConfig" value="cmdSaveConfig" onclick="event_saveConfig()">Sauver la config</button>
      <button class="btnAction" type="button" name="cmdQuit" value="cmdQuit" onclick="event_closeTemporisation()">Fermer</button><br>
      <br>

    </div>
    </td>
    </tr>
  </div>
    </table>
</body>

</html>
